<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://blog.sysarch.in/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.sysarch.in/" rel="alternate" type="text/html" /><updated>2022-03-20T10:57:55-05:00</updated><id>https://blog.sysarch.in/feed.xml</id><title type="html">sysarch</title><subtitle>blogging for system architecture for large scale.</subtitle><entry><title type="html">üí™ Mighty Graph</title><link href="https://blog.sysarch.in/algorithms/graph/2022/03/24/Mighty-Graph.html" rel="alternate" type="text/html" title="üí™ Mighty Graph" /><published>2022-03-24T00:00:00-05:00</published><updated>2022-03-24T00:00:00-05:00</updated><id>https://blog.sysarch.in/algorithms/graph/2022/03/24/Mighty-Graph</id><author><name></name></author><category term="algorithms" /><category term="graph" /><summary type="html"><![CDATA[A graph data structure is a collection of nodes that have data and are connected to other nodes.]]></summary></entry><entry><title type="html">ü™ê Welcome to World Of Programming Inceptions</title><link href="https://blog.sysarch.in/algorithms/recursion/2022/03/17/Recursion_&_Backtracking.html" rel="alternate" type="text/html" title="ü™ê Welcome to World Of Programming Inceptions" /><published>2022-03-17T00:00:00-05:00</published><updated>2022-03-17T00:00:00-05:00</updated><id>https://blog.sysarch.in/algorithms/recursion/2022/03/17/Recursion_&amp;_Backtracking</id><author><name></name></author><category term="algorithms" /><category term="recursion" /><summary type="html"><![CDATA[Recursion is a programming technique using function or algorithm that calls itself one or more times until a specified condition is met at which time the rest of each repetition is processed from the last one called to the first.]]></summary></entry><entry><title type="html">Dynamic Programming Snippets</title><link href="https://blog.sysarch.in/algorithms/2022/03/06/Dynamic-Programming.html" rel="alternate" type="text/html" title="Dynamic Programming Snippets" /><published>2022-03-06T00:00:00-06:00</published><updated>2022-03-06T00:00:00-06:00</updated><id>https://blog.sysarch.in/algorithms/2022/03/06/Dynamic-Programming</id><author><name></name></author><category term="algorithms" /><summary type="html"><![CDATA[A Python Code Snippets for problem which have overlapping and optimal problem space]]></summary></entry><entry><title type="html">Asynchronous Basics</title><link href="https://blog.sysarch.in/markdown/2022/02/21/asynchronous-extras.html" rel="alternate" type="text/html" title="Asynchronous Basics" /><published>2022-02-21T00:00:00-06:00</published><updated>2022-02-21T00:00:00-06:00</updated><id>https://blog.sysarch.in/markdown/2022/02/21/asynchronous-extras</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[Asynchronous routines are able to ‚Äúpause‚Äù while waiting on their ultimate result and let other routines run in the meantime.]]></summary></entry><entry><title type="html">Asynchronous Basics</title><link href="https://blog.sysarch.in/markdown/2022/02/21/asynchronous-basics.html" rel="alternate" type="text/html" title="Asynchronous Basics" /><published>2022-02-21T00:00:00-06:00</published><updated>2022-02-21T00:00:00-06:00</updated><id>https://blog.sysarch.in/markdown/2022/02/21/asynchronous-basics</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[Asynchronous routines are able to ‚Äúpause‚Äù while waiting on their ultimate result and let other routines run in the meantime.]]></summary></entry></feed>